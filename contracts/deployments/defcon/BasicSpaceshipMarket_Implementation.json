{
  "address": "0x254e08432E4B62D208494E1B2D567A288d2Ca600",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IOuterSpace",
          "name": "outerspace",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "SaleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spaceshipsToKeep",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spaceshipsToSell",
          "type": "uint256"
        }
      ],
      "name": "SpaceshipsForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fleetOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numSpaceships",
          "type": "uint256"
        }
      ],
      "name": "SpaceshipsSold",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        }
      ],
      "name": "cancelSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "locations",
          "type": "uint256[]"
        }
      ],
      "name": "getSales",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint144",
              "name": "pricePerUnit",
              "type": "uint144"
            },
            {
              "internalType": "uint256",
              "name": "spaceshipsToKeep",
              "type": "uint256"
            },
            {
              "internalType": "uint40",
              "name": "spaceshipsLeftToSell",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "timestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct BasicSpaceshipMarket.SpaceshipSale[]",
          "name": "sales",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onApprovalForAllBy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "numSpaceships",
          "type": "uint32"
        },
        {
          "internalType": "address payable",
          "name": "fleetSender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "toHash",
          "type": "bytes32"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "location",
          "type": "uint256"
        },
        {
          "internalType": "uint144",
          "name": "pricePerUnit",
          "type": "uint144"
        },
        {
          "internalType": "uint32",
          "name": "spaceshipsToKeep",
          "type": "uint32"
        },
        {
          "internalType": "uint40",
          "name": "spaceshipsToSell",
          "type": "uint40"
        }
      ],
      "name": "setSpaceshipsForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x82b6b5e11413ec2f1d5c60b2cfec3130a230c1e8cf0a524deffb40affd78147f",
  "receipt": {
    "to": null,
    "from": "0xbE19B59E8C588d68f475A407C7BA5fE813AEb792",
    "contractAddress": "0x254e08432E4B62D208494E1B2D567A288d2Ca600",
    "transactionIndex": 0,
    "gasUsed": "1089646",
    "logsBloom": "0x
    "blockHash": "0xa59c24395fccbe4de8c4d5d211d0c3814ffee9f4ba75f01e3852b4e76524845b",
    "transactionHash": "0x82b6b5e11413ec2f1d5c60b2cfec3130a230c1e8cf0a524deffb40affd78147f",
    "logs": [],
    "blockNumber": 30277222,
    "cumulativeGasUsed": "1089646",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7ed5118E042F22DA546C9aaA9540D515A6F776E9"
  ],
  "numDeployments": 3,
  "solcInputHash": "0a3b12d0a2259adfe7a6d8e5c5556813",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOuterSpace\",\"name\":\"outerspace\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SaleCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spaceshipsToKeep\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spaceshipsToSell\",\"type\":\"uint256\"}],\"name\":\"SpaceshipsForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fleetOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numSpaceships\",\"type\":\"uint256\"}],\"name\":\"SpaceshipsSold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"}],\"name\":\"cancelSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"locations\",\"type\":\"uint256[]\"}],\"name\":\"getSales\",\"outputs\":[{\"components\":[{\"internalType\":\"uint144\",\"name\":\"pricePerUnit\",\"type\":\"uint144\"},{\"internalType\":\"uint256\",\"name\":\"spaceshipsToKeep\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"spaceshipsLeftToSell\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct BasicSpaceshipMarket.SpaceshipSale[]\",\"name\":\"sales\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalForAllBy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"numSpaceships\",\"type\":\"uint32\"},{\"internalType\":\"address payable\",\"name\":\"fleetSender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"toHash\",\"type\":\"bytes32\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"location\",\"type\":\"uint256\"},{\"internalType\":\"uint144\",\"name\":\"pricePerUnit\",\"type\":\"uint144\"},{\"internalType\":\"uint32\",\"name\":\"spaceshipsToKeep\",\"type\":\"uint32\"},{\"internalType\":\"uint40\",\"name\":\"spaceshipsToSell\",\"type\":\"uint40\"}],\"name\":\"setSpaceshipsForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSales(uint256[])\":{\"details\":\"useful to get data without any off-chain caching, but does not scale to many locations\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BasicSpaceshipMarket.sol\":\"BasicSpaceshipMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"conquest-eth-contracts/src/outerspace/events/ImportingOuterSpaceEvents.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface ImportingOuterSpaceEvents {\\n    event PlanetStake(\\n        address indexed acquirer,\\n        uint256 indexed location,\\n        uint32 numSpaceships,\\n        int40 travelingUpkeep,\\n        uint32 overflow,\\n        uint256 stake,\\n        bool freegift\\n    );\\n    event FleetSent(\\n        address indexed fleetSender,\\n        address indexed fleetOwner,\\n        uint256 indexed from,\\n        address operator,\\n        uint256 fleet,\\n        uint32 quantity,\\n        uint32 newNumSpaceships,\\n        int40 newTravelingUpkeep,\\n        uint32 newOverflow\\n    );\\n\\n    struct ArrivalData {\\n        uint32 newNumspaceships;\\n        int40 newTravelingUpkeep;\\n        uint32 newOverflow;\\n        uint32 numSpaceshipsAtArrival;\\n        uint32 taxLoss;\\n        uint32 fleetLoss;\\n        uint32 planetLoss;\\n        uint32 inFlightFleetLoss;\\n        uint32 inFlightPlanetLoss;\\n        uint32 accumulatedDefenseAdded;\\n        uint32 accumulatedAttackAdded;\\n    }\\n\\n    event FleetArrived(\\n        uint256 indexed fleet,\\n        address indexed fleetOwner,\\n        address indexed destinationOwner,\\n        uint256 destination,\\n        bool gift,\\n        bool won,\\n        ArrivalData data\\n    );\\n\\n    event TravelingUpkeepRefund(\\n        uint256 indexed origin,\\n        uint256 indexed fleet,\\n        uint32 newNumspaceships,\\n        int40 newTravelingUpkeep,\\n        uint32 newOverflow\\n    );\\n\\n    event PlanetTransfer(\\n        address indexed previousOwner,\\n        address indexed newOwner,\\n        uint256 indexed location,\\n        uint32 newNumspaceships,\\n        int40 newTravelingUpkeep,\\n        uint32 newOverflow\\n    );\\n\\n    event PlanetReset(uint256 indexed location);\\n\\n    event PlanetExit(address indexed owner, uint256 indexed location);\\n\\n    event ExitComplete(address indexed owner, uint256 indexed location, uint256 stake);\\n\\n    event RewardSetup(uint256 indexed location, address indexed giver, uint256 rewardId);\\n    event RewardToWithdraw(address indexed owner, uint256 indexed location, uint256 indexed rewardId);\\n\\n    event StakeToWithdraw(address indexed owner, uint256 newStake, bool freegift);\\n\\n    event Initialized(\\n        bytes32 genesis,\\n        uint256 resolveWindow,\\n        uint256 timePerDistance,\\n        uint256 exitDuration,\\n        uint32 acquireNumSpaceships,\\n        uint32 productionSpeedUp,\\n        uint256 frontrunningDelay,\\n        uint256 productionCapAsDuration,\\n        uint256 upkeepProductionDecreaseRatePer10000th,\\n        uint256 fleetSizeFactor6,\\n        uint32 initialSpaceExpansion,\\n        uint32 expansionDelta,\\n        uint256 giftTaxPer10000\\n    );\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    // TODO use it\\n    event Transfer(address indexed from, address indexed to, uint256 indexed location);\\n}\\n\",\"keccak256\":\"0xfbfd90b64f77f52b8c4833ff04c627b418a76073bb660ced3df48a57cdb52923\",\"license\":\"AGPL-3.0\"},\"conquest-eth-contracts/src/outerspace/interfaces/IApprovalForAllReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface IApprovalForAllReceiver {\\n    function onApprovalForAllBy(address owner, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xba6a9155fe9d533dc926ac028445ae3fcadef9f9f7072c9129ab9e62bbe06544\",\"license\":\"AGPL-3.0\"},\"conquest-eth-contracts/src/outerspace/interfaces/IOuterSpace.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"./IOuterSpaceFleets.sol\\\";\\nimport \\\"./IOuterSpacePlanets.sol\\\";\\n\\n// solhint-disable-next-line no-empty-blocks\\ninterface IOuterSpace is IOuterSpaceFleets, IOuterSpacePlanets {}\\n\",\"keccak256\":\"0x264c62a909e321252e62bf5c926438d63012ca2b15922d8e6d63a38a98852043\",\"license\":\"AGPL-3.0\"},\"conquest-eth-contracts/src/outerspace/interfaces/IOuterSpaceFleets.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../types/ImportingOuterSpaceTypes.sol\\\";\\nimport \\\"../events/ImportingOuterSpaceEvents.sol\\\";\\n\\ninterface IOuterSpaceFleets is ImportingOuterSpaceTypes, ImportingOuterSpaceEvents {\\n\\n    function resolveFleet(uint256 fleetId, FleetResolution calldata resolution) external;\\n\\n    function send(\\n        uint256 from,\\n        uint32 quantity,\\n        bytes32 toHash\\n    ) external;\\n\\n    function sendFor(FleetLaunch calldata launch) external;\\n\\n    function getFleet(uint256 fleetId, uint256 from)\\n        external\\n        view\\n        returns (\\n            address owner,\\n            uint40 launchTime,\\n            uint32 quantity,\\n            uint64 flyingAtLaunch, // can be more than quantity if multiple fleet were launched around the same time from the same planet\\n            uint64 destroyedAtLaunch\\n        );\\n}\\n\",\"keccak256\":\"0x7cfc331fae6a2f99d3a92eccfd5e4a92447c6fd93e3201753490fd775f855d09\",\"license\":\"AGPL-3.0\"},\"conquest-eth-contracts/src/outerspace/interfaces/IOuterSpacePlanets.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../types/ImportingOuterSpaceTypes.sol\\\";\\nimport \\\"../events/ImportingOuterSpaceEvents.sol\\\";\\n\\ninterface IOuterSpacePlanets is ImportingOuterSpaceTypes, ImportingOuterSpaceEvents {\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    function ownerOf(uint256 location) external view returns (address);\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 location\\n    ) external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 location,\\n        bytes calldata data\\n    ) external;\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 location\\n    ) external;\\n\\n    function ownerAndOwnershipStartTimeOf(uint256 location)\\n        external\\n        view\\n        returns (address owner, uint40 ownershipStartTime);\\n\\n    function getPlanet(uint256 location) external view returns (ExternalPlanet memory state, PlanetStats memory stats);\\n\\n    function getPlanetState(uint256 location) external view returns (ExternalPlanet memory state);\\n\\n    function getUpdatedPlanetState(uint256 location) external view returns (ExternalPlanet memory state);\\n}\\n\",\"keccak256\":\"0x7aa4c574cc1fdaa5000c3c5dbda119c77ec478456bfbc4aae334112d2542dc03\",\"license\":\"AGPL-3.0\"},\"conquest-eth-contracts/src/outerspace/types/ImportingOuterSpaceTypes.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ImportingOuterSpaceTypes {\\n    // front running protection : _frontruunningDelay / 2 slots\\n    struct InFlight {\\n        uint32 flying;\\n        uint32 destroyed;\\n        // STORE last attack too, to compute combined attack on it ? uint128 is plainty enough\\n    }\\n\\n    // TODO remove\\n    // struct Account {\\n    //     // TODO add more info\\n    //     // stake for example ? => coild it be used by staking ?\\n    //     // numPlanets ?\\n    //     // numSpaceships ? => probably too much ?\\n    //     uint64 totalProduction;\\n    //     uint64 productionDebt;\\n    // }\\n\\n    struct Discovered {\\n        uint32 minX;\\n        uint32 maxX;\\n        uint32 minY;\\n        uint32 maxY;\\n    }\\n\\n    // TODO split in 2 structs ? PlanetOwnership and PlanetState ?\\n    struct Planet {\\n        address owner;\\n        uint40 ownershipStartTime; // ~ 34865 years, should be enough :)\\n        uint40 exitStartTime; // ~ 34865 years, should be enough :)\\n        // TODO uint16 ?\\n        ///\\n        uint32 numSpaceships; // uint31 + first bit => active // TODO use bool active ?\\n        uint40 lastUpdated; // ~ 34865 years, should be enough :)\\n        int40 travelingUpkeep; // decrease per _upkeepProductionDecreaseRatePer10000th  * production\\n        uint32 overflow;\\n        // bool active; // TODO ?\\n        // bool exiting; // TODO ?\\n    }\\n\\n    struct Fleet {\\n        address owner;\\n        uint40 launchTime; // ~ 34865 years, should be enough :)\\n        uint32 quantity; // TODO? first bit = done? to keep quantity value on-chain post resolution, actually not needed, can be given in the hash\\n        uint24 futureExtraProduction;\\n        // we got 24bit more to store if needed\\n        // operator ? // signer ?\\n    }\\n\\n    struct PlanetStats {\\n        int8 subX;\\n        int8 subY;\\n        uint32 stake;\\n        uint16 production;\\n        uint16 attack;\\n        uint16 defense;\\n        uint16 speed;\\n        uint16 natives;\\n    }\\n\\n    struct ExternalPlanet {\\n        address owner;\\n        uint40 ownershipStartTime; // ~ 34865 years, should be enough :)\\n        uint40 exitStartTime; // ~ 34865 years, should be enough :)\\n        uint32 numSpaceships;\\n        uint32 overflow;\\n        uint40 lastUpdated; // ~ 34865 years, should be enough :)\\n        bool active;\\n        // bool exiting;\\n        uint256 reward;\\n    }\\n\\n    struct FleetLaunch {\\n        address fleetSender;\\n        address fleetOwner;\\n        uint256 from;\\n        uint32 quantity;\\n        bytes32 toHash;\\n    }\\n    struct FleetResolution {\\n        uint256 from;\\n        uint256 to;\\n        uint256 distance;\\n        uint256 arrivalTimeWanted;\\n        bool gift;\\n        address specific;\\n        bytes32 secret;\\n        address fleetSender; // does not work ?\\n        address operator; // should be saved ?\\n    }\\n\\n    struct AccumulatedAttack {\\n        address target;\\n        uint32 numAttackSpent;\\n        uint32 damageCausedSoFar;\\n        uint16 averageAttackPower;\\n    }\\n}\\n\",\"keccak256\":\"0x757efddece0b84f036e67da11a358e0c758ed4656294a27ecce0fcfdc53d7a77\",\"license\":\"AGPL-3.0\"},\"src/BasicSpaceshipMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"conquest-eth-contracts/src/outerspace/interfaces/IOuterSpace.sol\\\";\\nimport \\\"conquest-eth-contracts/src/outerspace/interfaces/IApprovalForAllReceiver.sol\\\";\\n\\ncontract BasicSpaceshipMarket is IApprovalForAllReceiver {\\n    event SpaceshipsForSale(\\n        uint256 indexed location,\\n        address indexed owner,\\n        uint256 pricePerUnit,\\n        uint256 spaceshipsToKeep,\\n        uint256 spaceshipsToSell\\n    );\\n    event SaleCancelled(uint256 indexed location, address indexed owner);\\n\\n    event SpaceshipsSold(uint256 indexed location, address indexed fleetOwner, uint256 numSpaceships);\\n\\n    struct SpaceshipSale {\\n        uint144 pricePerUnit;\\n        uint256 spaceshipsToKeep;\\n        uint40 spaceshipsLeftToSell;\\n        uint40 timestamp;\\n    }\\n\\n    mapping(uint256 => SpaceshipSale) internal _sales;\\n\\n    IOuterSpace internal immutable _outerspace;\\n\\n    constructor(IOuterSpace outerspace) {\\n        _outerspace = outerspace;\\n    }\\n\\n    ///@dev useful to get data without any off-chain caching, but does not scale to many locations\\n    function getSales(uint256[] calldata locations) external view returns (SpaceshipSale[] memory sales) {\\n        sales = new SpaceshipSale[](locations.length);\\n        for (uint256 i = 0; i < locations.length; i++) {\\n            sales[i] = _sales[locations[i]];\\n        }\\n    }\\n\\n    function onApprovalForAllBy(address owner, bytes calldata data) external {\\n        require(msg.sender == address(_outerspace), \\\"APPROVEDBY_EXPECTS_OUTERSPACE\\\");\\n        (uint256 location, uint144 pricePerUnit, uint32 spaceshipsToKeep, uint40 spaceshipsToSell) = abi.decode(\\n            data,\\n            (uint256, uint144, uint32, uint40)\\n        );\\n        _setSpaceshipsForSale(owner, location, pricePerUnit, spaceshipsToKeep, spaceshipsToSell);\\n    }\\n\\n    function setSpaceshipsForSale(\\n        uint256 location,\\n        uint144 pricePerUnit,\\n        uint32 spaceshipsToKeep,\\n        uint40 spaceshipsToSell\\n    ) external {\\n        _setSpaceshipsForSale(msg.sender, location, pricePerUnit, spaceshipsToKeep, spaceshipsToSell);\\n    }\\n\\n    function cancelSale(uint256 location) external {\\n        address currentOwner = _outerspace.ownerOf(location);\\n        require(currentOwner == msg.sender, \\\"NOT_PLANET_OWNER\\\");\\n        _sales[location].pricePerUnit = 0;\\n        _sales[location].spaceshipsToKeep = 0;\\n        _sales[location].spaceshipsLeftToSell = 0;\\n        _sales[location].timestamp = 0;\\n\\n        emit SaleCancelled(location, currentOwner);\\n    }\\n\\n    function purchase(\\n        uint256 location,\\n        uint32 numSpaceships,\\n        address payable fleetSender,\\n        bytes32 toHash\\n    ) external payable {\\n        SpaceshipSale memory sale = _sales[location];\\n        (, uint40 ownershipStartTime) = _outerspace.ownerAndOwnershipStartTimeOf(location);\\n\\n        require(sale.timestamp > ownershipStartTime, \\\"OWNERSHIP_CHANGED_SALE_OUTDATED\\\");\\n\\n        // TODO use a min-max and avoid revert this way ?\\n        require(sale.spaceshipsLeftToSell >= numSpaceships, \\\"NOT_ENOUGH_ON_SALE\\\");\\n\\n        // TODO special case for 0xFFFFF to indicate I want to sell for ever\\n        // if (sale.spaceshipsLeftToSell != 2**40-1) {\\n        sale.spaceshipsLeftToSell -= numSpaceships;\\n        // }\\n\\n        uint256 toPay = numSpaceships * sale.pricePerUnit;\\n        require(msg.value >= toPay, \\\"NOT_ENOUGH_FUND\\\");\\n        fleetSender.transfer(toPay);\\n        if (msg.value > toPay) {\\n            payable(msg.sender).transfer(msg.value - toPay);\\n        }\\n\\n        IOuterSpace.FleetLaunch memory launch;\\n        launch.fleetSender = fleetSender; // this is checked by outerspace\\n        launch.fleetOwner = msg.sender;\\n        launch.from = location;\\n        launch.quantity = numSpaceships;\\n        launch.toHash = toHash;\\n        _outerspace.sendFor(launch);\\n\\n        if (sale.spaceshipsToKeep > 0) {\\n            // we can call getPlanetState as the plane state has been updated above\\n            IOuterSpace.ExternalPlanet memory planetUpdated = _outerspace.getPlanetState(location);\\n\\n            // TODO could update OuterSpace.sendFor function to actually specify the amount left, and then pay for that amount if smaller that what wanted\\n            require(planetUpdated.numSpaceships >= sale.spaceshipsToKeep, \\\"TOO_MANY_SPACESHIPS_BOUGHT\\\");\\n        }\\n\\n        emit SpaceshipsSold(location, msg.sender, numSpaceships);\\n    }\\n\\n    // ----------------------------------------\\n    // INTERNAL\\n    // ----------------------------------------\\n\\n    function _setSpaceshipsForSale(\\n        address seller,\\n        uint256 location,\\n        uint144 pricePerUnit,\\n        uint32 spaceshipsToKeep,\\n        uint40 spaceshipsToSell\\n    ) internal {\\n        address currentOwner = _outerspace.ownerOf(location);\\n        require(currentOwner == seller, \\\"NOT_PLANET_OWNER\\\");\\n        _sales[location].pricePerUnit = pricePerUnit;\\n        _sales[location].spaceshipsToKeep = spaceshipsToKeep;\\n        _sales[location].spaceshipsLeftToSell = spaceshipsToSell;\\n        _sales[location].timestamp = uint40(block.timestamp);\\n\\n        emit SpaceshipsForSale(location, currentOwner, pricePerUnit, spaceshipsToKeep, spaceshipsToSell);\\n    }\\n}\\n\",\"keccak256\":\"0x0446b5ad27efa6c5ac5df08634899512d5d7c0eac820b67810d3574d3b017166\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161138a38038061138a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516112dc6100ae600039600081816102fa0152818161065a015281816106f40152818161087901528181610a490152610b3101526112dc6000f3fe6080604052600436106100595760003560e01c8063b805f17011610043578063b805f170146100b6578063bd94b005146100c9578063cffb4f51146100e957600080fd5b8062313a681461005e5780636c0000d014610094575b600080fd5b34801561006a57600080fd5b5061007e610079366004610d5c565b610109565b60405161008b9190610dd1565b60405180910390f35b3480156100a057600080fd5b506100b46100af366004610e7b565b61025b565b005b6100b46100c4366004610f07565b61026e565b3480156100d557600080fd5b506100b46100e4366004610f4f565b610847565b3480156100f557600080fd5b506100b4610104366004610f68565b610a31565b60608167ffffffffffffffff81111561012457610124610fed565b60405190808252806020026020018201604052801561019457816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101425790505b50905060005b82811015610254576000808585848181106101b7576101b761101c565b602090810292909201358352508181019290925260409081016000208151608081018352815471ffffffffffffffffffffffffffffffffffff1681526001820154938101939093526002015464ffffffffff8082169284019290925265010000000000900416606082015282518390839081106102365761023661101c565b6020026020010181905250808061024c9061107a565b91505061019a565b5092915050565b6102683385858585610aff565b50505050565b6000848152602081815260408083208151608081018352815471ffffffffffffffffffffffffffffffffffff1681526001820154938101939093526002015464ffffffffff8082168484015265010000000000909104166060830152517f8a886cd5000000000000000000000000000000000000000000000000000000008152600481018790529091907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638a886cd590602401604080518083038186803b15801561035057600080fd5b505afa158015610364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038891906110ce565b9150508064ffffffffff16826060015164ffffffffff161161040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f574e4552534849505f4348414e4745445f53414c455f4f555444415445440060448201526064015b60405180910390fd5b8463ffffffff16826040015164ffffffffff161015610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e4f545f454e4f5547485f4f4e5f53414c4500000000000000000000000000006044820152606401610402565b8463ffffffff168260400181815161049e9190611108565b64ffffffffff1690525081516000906104bd9063ffffffff881661112e565b71ffffffffffffffffffffffffffffffffffff1690508034101561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e4f545f454e4f5547485f46554e4400000000000000000000000000000000006044820152606401610402565b60405173ffffffffffffffffffffffffffffffffffffffff86169082156108fc029083906000818181858888f19350505050158015610580573d6000803e3d6000fd5b50803411156105c157336108fc6105978334611168565b6040518115909202916000818181858888f193505050501580156105bf573d6000803e3d6000fd5b505b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff878116825233602083019081528284018b815263ffffffff8b811660608601908152608086018b815296517fcf3ecf070000000000000000000000000000000000000000000000000000000081528651861660048201529351851660248501529151604484015290511660648201529251608484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063cf3ecf079060a401600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b50505050602084015115610800576040517fd522989e000000000000000000000000000000000000000000000000000000008152600481018990526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d522989e906024016101006040518083038186803b15801561074c57600080fd5b505afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610784919061119a565b90508460200151816060015163ffffffff1610156107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f544f4f5f4d414e595f535041434553484950535f424f554748540000000000006044820152606401610402565b505b60405163ffffffff88168152339089907f8b6f89fabaaf5afc397f49d27a56a776e556e3901166876ef1f0240d0e8b4f6f9060200160405180910390a35050505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156108d057600080fd5b505afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190611282565b905073ffffffffffffffffffffffffffffffffffffffff81163314610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e4f545f504c414e45545f4f574e4552000000000000000000000000000000006044820152606401610402565b60008281526020819052604080822080547fffffffffffffffffffffffffffff0000000000000000000000000000000000001681556001810183905560020180547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555173ffffffffffffffffffffffffffffffffffffffff83169184917fd9e530acb8429c8e5337d9d3230e4cc7d742e32c2fc8d76608c19f2e1701ed049190a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ad0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f415050524f56454442595f455850454354535f4f5554455253504143450000006044820152606401610402565b6000808080610ae185870187610e7b565b9350935093509350610af68785858585610aff565b50505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b158015610b8857600080fd5b505afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc09190611282565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e4f545f504c414e45545f4f574e4552000000000000000000000000000000006044820152606401610402565b6000858152602081815260409182902080547fffffffffffffffffffffffffffff0000000000000000000000000000000000001671ffffffffffffffffffffffffffffffffffff8816908117825563ffffffff8716600183018190556002909201805464ffffffffff8881167fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000909216821765010000000000429290921691909102179091558451918252928101919091529182015273ffffffffffffffffffffffffffffffffffffffff82169086907f8e29bd07f1849718cb90b01b7744544687836ed3612e0ba9180d868462c19dcc9060600160405180910390a3505050505050565b60008060208385031215610d6f57600080fd5b823567ffffffffffffffff80821115610d8757600080fd5b818501915085601f830112610d9b57600080fd5b813581811115610daa57600080fd5b8660208260051b8501011115610dbf57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919060409081850190868401855b82811015610e46578151805171ffffffffffffffffffffffffffffffffffff16855286810151878601528581015164ffffffffff90811687870152606091820151169085015260809093019290850190600101610dee565b5091979650505050505050565b63ffffffff81168114610e6557600080fd5b50565b64ffffffffff81168114610e6557600080fd5b60008060008060808587031215610e9157600080fd5b84359350602085013571ffffffffffffffffffffffffffffffffffff81168114610eba57600080fd5b92506040850135610eca81610e53565b91506060850135610eda81610e68565b939692955090935050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e6557600080fd5b60008060008060808587031215610f1d57600080fd5b843593506020850135610f2f81610e53565b92506040850135610f3f81610ee5565b9396929550929360600135925050565b600060208284031215610f6157600080fd5b5035919050565b600080600060408486031215610f7d57600080fd5b8335610f8881610ee5565b9250602084013567ffffffffffffffff80821115610fa557600080fd5b818601915086601f830112610fb957600080fd5b813581811115610fc857600080fd5b876020828501011115610fda57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110ac576110ac61104b565b5060010190565b80516110be81610ee5565b919050565b80516110be81610e68565b600080604083850312156110e157600080fd5b82516110ec81610ee5565b60208401519092506110fd81610e68565b809150509250929050565b600064ffffffffff838116908316818110156111265761112661104b565b039392505050565b600071ffffffffffffffffffffffffffffffffffff8083168185168183048111821515161561115f5761115f61104b565b02949350505050565b60008282101561117a5761117a61104b565b500390565b80516110be81610e53565b805180151581146110be57600080fd5b60006101008083850312156111ae57600080fd5b6040519081019067ffffffffffffffff821181831017156111f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81604052611205846110b3565b8152611213602085016110c3565b6020820152611224604085016110c3565b60408201526112356060850161117f565b60608201526112466080850161117f565b608082015261125760a085016110c3565b60a082015261126860c0850161118a565b60c082015260e084015160e0820152809250505092915050565b60006020828403121561129457600080fd5b815161129f81610ee5565b939250505056fea2646970667358221220121645ba4dfd5cd118b31db0a89b0309e18251397e2b905bbcf275510b34082c64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063b805f17011610043578063b805f170146100b6578063bd94b005146100c9578063cffb4f51146100e957600080fd5b8062313a681461005e5780636c0000d014610094575b600080fd5b34801561006a57600080fd5b5061007e610079366004610d5c565b610109565b60405161008b9190610dd1565b60405180910390f35b3480156100a057600080fd5b506100b46100af366004610e7b565b61025b565b005b6100b46100c4366004610f07565b61026e565b3480156100d557600080fd5b506100b46100e4366004610f4f565b610847565b3480156100f557600080fd5b506100b4610104366004610f68565b610a31565b60608167ffffffffffffffff81111561012457610124610fed565b60405190808252806020026020018201604052801561019457816020015b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816101425790505b50905060005b82811015610254576000808585848181106101b7576101b761101c565b602090810292909201358352508181019290925260409081016000208151608081018352815471ffffffffffffffffffffffffffffffffffff1681526001820154938101939093526002015464ffffffffff8082169284019290925265010000000000900416606082015282518390839081106102365761023661101c565b6020026020010181905250808061024c9061107a565b91505061019a565b5092915050565b6102683385858585610aff565b50505050565b6000848152602081815260408083208151608081018352815471ffffffffffffffffffffffffffffffffffff1681526001820154938101939093526002015464ffffffffff8082168484015265010000000000909104166060830152517f8a886cd5000000000000000000000000000000000000000000000000000000008152600481018790529091907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638a886cd590602401604080518083038186803b15801561035057600080fd5b505afa158015610364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038891906110ce565b9150508064ffffffffff16826060015164ffffffffff161161040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f574e4552534849505f4348414e4745445f53414c455f4f555444415445440060448201526064015b60405180910390fd5b8463ffffffff16826040015164ffffffffff161015610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e4f545f454e4f5547485f4f4e5f53414c4500000000000000000000000000006044820152606401610402565b8463ffffffff168260400181815161049e9190611108565b64ffffffffff1690525081516000906104bd9063ffffffff881661112e565b71ffffffffffffffffffffffffffffffffffff1690508034101561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e4f545f454e4f5547485f46554e4400000000000000000000000000000000006044820152606401610402565b60405173ffffffffffffffffffffffffffffffffffffffff86169082156108fc029083906000818181858888f19350505050158015610580573d6000803e3d6000fd5b50803411156105c157336108fc6105978334611168565b6040518115909202916000818181858888f193505050501580156105bf573d6000803e3d6000fd5b505b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff878116825233602083019081528284018b815263ffffffff8b811660608601908152608086018b815296517fcf3ecf070000000000000000000000000000000000000000000000000000000081528651861660048201529351851660248501529151604484015290511660648201529251608484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063cf3ecf079060a401600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b50505050602084015115610800576040517fd522989e000000000000000000000000000000000000000000000000000000008152600481018990526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d522989e906024016101006040518083038186803b15801561074c57600080fd5b505afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610784919061119a565b90508460200151816060015163ffffffff1610156107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f544f4f5f4d414e595f535041434553484950535f424f554748540000000000006044820152606401610402565b505b60405163ffffffff88168152339089907f8b6f89fabaaf5afc397f49d27a56a776e556e3901166876ef1f0240d0e8b4f6f9060200160405180910390a35050505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156108d057600080fd5b505afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190611282565b905073ffffffffffffffffffffffffffffffffffffffff81163314610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e4f545f504c414e45545f4f574e4552000000000000000000000000000000006044820152606401610402565b60008281526020819052604080822080547fffffffffffffffffffffffffffff0000000000000000000000000000000000001681556001810183905560020180547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001690555173ffffffffffffffffffffffffffffffffffffffff83169184917fd9e530acb8429c8e5337d9d3230e4cc7d742e32c2fc8d76608c19f2e1701ed049190a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ad0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f415050524f56454442595f455850454354535f4f5554455253504143450000006044820152606401610402565b6000808080610ae185870187610e7b565b9350935093509350610af68785858585610aff565b50505050505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b158015610b8857600080fd5b505afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc09190611282565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e4f545f504c414e45545f4f574e4552000000000000000000000000000000006044820152606401610402565b6000858152602081815260409182902080547fffffffffffffffffffffffffffff0000000000000000000000000000000000001671ffffffffffffffffffffffffffffffffffff8816908117825563ffffffff8716600183018190556002909201805464ffffffffff8881167fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000909216821765010000000000429290921691909102179091558451918252928101919091529182015273ffffffffffffffffffffffffffffffffffffffff82169086907f8e29bd07f1849718cb90b01b7744544687836ed3612e0ba9180d868462c19dcc9060600160405180910390a3505050505050565b60008060208385031215610d6f57600080fd5b823567ffffffffffffffff80821115610d8757600080fd5b818501915085601f830112610d9b57600080fd5b813581811115610daa57600080fd5b8660208260051b8501011115610dbf57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919060409081850190868401855b82811015610e46578151805171ffffffffffffffffffffffffffffffffffff16855286810151878601528581015164ffffffffff90811687870152606091820151169085015260809093019290850190600101610dee565b5091979650505050505050565b63ffffffff81168114610e6557600080fd5b50565b64ffffffffff81168114610e6557600080fd5b60008060008060808587031215610e9157600080fd5b84359350602085013571ffffffffffffffffffffffffffffffffffff81168114610eba57600080fd5b92506040850135610eca81610e53565b91506060850135610eda81610e68565b939692955090935050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e6557600080fd5b60008060008060808587031215610f1d57600080fd5b843593506020850135610f2f81610e53565b92506040850135610f3f81610ee5565b9396929550929360600135925050565b600060208284031215610f6157600080fd5b5035919050565b600080600060408486031215610f7d57600080fd5b8335610f8881610ee5565b9250602084013567ffffffffffffffff80821115610fa557600080fd5b818601915086601f830112610fb957600080fd5b813581811115610fc857600080fd5b876020828501011115610fda57600080fd5b6020830194508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110ac576110ac61104b565b5060010190565b80516110be81610ee5565b919050565b80516110be81610e68565b600080604083850312156110e157600080fd5b82516110ec81610ee5565b60208401519092506110fd81610e68565b809150509250929050565b600064ffffffffff838116908316818110156111265761112661104b565b039392505050565b600071ffffffffffffffffffffffffffffffffffff8083168185168183048111821515161561115f5761115f61104b565b02949350505050565b60008282101561117a5761117a61104b565b500390565b80516110be81610e53565b805180151581146110be57600080fd5b60006101008083850312156111ae57600080fd5b6040519081019067ffffffffffffffff821181831017156111f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81604052611205846110b3565b8152611213602085016110c3565b6020820152611224604085016110c3565b60408201526112356060850161117f565b60608201526112466080850161117f565b608082015261125760a085016110c3565b60a082015261126860c0850161118a565b60c082015260e084015160e0820152809250505092915050565b60006020828403121561129457600080fd5b815161129f81610ee5565b939250505056fea2646970667358221220121645ba4dfd5cd118b31db0a89b0309e18251397e2b905bbcf275510b34082c64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getSales(uint256[])": {
        "details": "useful to get data without any off-chain caching, but does not scale to many locations"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 594,
        "contract": "src/BasicSpaceshipMarket.sol:BasicSpaceshipMarket",
        "label": "_sales",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(SpaceshipSale)589_storage)"
      }
    ],
    "types": {
      "t_mapping(t_uint256,t_struct(SpaceshipSale)589_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BasicSpaceshipMarket.SpaceshipSale)",
        "numberOfBytes": "32",
        "value": "t_struct(SpaceshipSale)589_storage"
      },
      "t_struct(SpaceshipSale)589_storage": {
        "encoding": "inplace",
        "label": "struct BasicSpaceshipMarket.SpaceshipSale",
        "members": [
          {
            "astId": 582,
            "contract": "src/BasicSpaceshipMarket.sol:BasicSpaceshipMarket",
            "label": "pricePerUnit",
            "offset": 0,
            "slot": "0",
            "type": "t_uint144"
          },
          {
            "astId": 584,
            "contract": "src/BasicSpaceshipMarket.sol:BasicSpaceshipMarket",
            "label": "spaceshipsToKeep",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 586,
            "contract": "src/BasicSpaceshipMarket.sol:BasicSpaceshipMarket",
            "label": "spaceshipsLeftToSell",
            "offset": 0,
            "slot": "2",
            "type": "t_uint40"
          },
          {
            "astId": 588,
            "contract": "src/BasicSpaceshipMarket.sol:BasicSpaceshipMarket",
            "label": "timestamp",
            "offset": 5,
            "slot": "2",
            "type": "t_uint40"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint144": {
        "encoding": "inplace",
        "label": "uint144",
        "numberOfBytes": "18"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint40": {
        "encoding": "inplace",
        "label": "uint40",
        "numberOfBytes": "5"
      }
    }
  }
}